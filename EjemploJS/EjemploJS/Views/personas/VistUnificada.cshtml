@model EjemploJS.Models.persona

@{
    ViewBag.Title = "Vista Unificada";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>

    function esconderEliminar()
    {
        $('.elementoEliminar').hide();
        $('.elementoModificar').show();
    }

    function esconderModificar() {
        $('.elementoEliminar').show();
        $('.elementoModificar').hide();
    }

    function confirmarEliminar(cedula) {

        var respuesta = confirm('Confirma que desea eliminar a esta persona del sistema?');

        if (respuesta == true)
        {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("eliminarPersona")',
                data: 'id=' + cedula,
                success: function (result) {
                    if (result.success)
					{
						alert('Persona eliminada con éxito');
						var url = '@Url.Action("Index", "personas")';
						window.location.href = url;
					}       
                },
            });
        }
    }

</script>

<h2>VistUnificada</h2>

<a class="btn btn-default" onclick="esconderEliminar()">Modificar</a>
<a class="btn btn-default" onclick="esconderModificar()">Eliminar</a>

<div>
    <div class="elementoEliminar">
        <h4>persona</h4>
        <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.nombre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.nombre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.apellido1)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.apellido1)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.apellido2)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.apellido2)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.carne)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.carne)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.sexo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.sexo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.fechaNac)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.fechaNac)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.email)
        </dd>

    </dl>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-default" onclick="confirmarEliminar('@(Model.cedula)')">Eliminar</a>
                <a class="btn btn-default" onclick="esconderModificar()">Cancelar</a>

            </div>
        </div>
        </div>
</div>

<div class="elementoModificar" style="display:none">

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>persona</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellido1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellido1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellido1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellido2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellido2, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.cedula)

        <div class="form-group">
            @Html.LabelFor(model => model.carne, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.carne, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.carne, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.sexo)
                    @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaNac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaNac, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaNac, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <a class="btn btn-default" onclick="esconderModificar()">Cancelar</a>
            </div>
        </div>
    </div>
}
 </div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
